digraph G {
	rankdir="LR";
	concentrate="true";
	"<ModuleGraph>" [label="<ModuleGraph>"];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" [shape="record",label="<f0> Script| <f1> F:\GSoC\Moz\pyparsing\pyparsing.py"];
	"uuid" [shape="record",label="<f0> SourceModule| <f1> uuid"];
	"hashlib.sha1" [shape="record",label="<f0> MissingModule| <f1> hashlib.sha1"];
	"hashlib.md5" [shape="record",label="<f0> MissingModule| <f1> hashlib.md5"];
	"hashlib" [shape="record",label="<f0> SourceModule| <f1> hashlib"];
	"struct" [shape="record",label="<f0> SourceModule| <f1> struct"];
	"struct.calcsize" [shape="record",label="<f0> MissingModule| <f1> struct.calcsize"];
	"_struct.__doc__" [shape="record",label="<f0> MissingModule| <f1> _struct.__doc__"];
	"_struct._clearcache" [shape="record",label="<f0> MissingModule| <f1> _struct._clearcache"];
	"_struct" [shape="record",label="<f0> BuiltinModule| <f1> _struct"];
	"binascii" [shape="record",label="<f0> BuiltinModule| <f1> binascii"];
	"binascii.hexlify" [shape="record",label="<f0> MissingModule| <f1> binascii.hexlify"];
	"_hashlib.pbkdf2_hmac" [shape="record",label="<f0> MissingModule| <f1> _hashlib.pbkdf2_hmac"];
	"logging" [shape="record",label="<f0> Package| <f1> logging"];
	"atexit" [shape="record",label="<f0> SourceModule| <f1> atexit"];
	"thread" [shape="record",label="<f0> BuiltinModule| <f1> thread"];
	"thread._local" [shape="record",label="<f0> MissingModule| <f1> thread._local"];
	"thread.stack_size" [shape="record",label="<f0> MissingModule| <f1> thread.stack_size"];
	"thread.get_ident" [shape="record",label="<f0> MissingModule| <f1> thread.get_ident"];
	"codecs" [shape="record",label="<f0> SourceModule| <f1> codecs"];
	"encodings" [shape="record",label="<f0> Package| <f1> encodings"];
	"encodings.aliases" [shape="record",label="<f0> SourceModule| <f1> encodings.aliases"];
	"_codecs" [shape="record",label="<f0> BuiltinModule| <f1> _codecs"];
	"cStringIO" [shape="record",label="<f0> BuiltinModule| <f1> cStringIO"];
	"cStringIO.StringIO" [shape="record",label="<f0> MissingModule| <f1> cStringIO.StringIO"];
	"_hashlib" [shape="record",label="<f0> Extension| <f1> _hashlib"];
	"_sha512" [shape="record",label="<f0> BuiltinModule| <f1> _sha512"];
	"_sha256" [shape="record",label="<f0> BuiltinModule| <f1> _sha256"];
	"_md5" [shape="record",label="<f0> BuiltinModule| <f1> _md5"];
	"_sha" [shape="record",label="<f0> BuiltinModule| <f1> _sha"];
	"time" [shape="record",label="<f0> BuiltinModule| <f1> time"];
	"time.strptime" [shape="record",label="<f0> MissingModule| <f1> time.strptime"];
	"time.time" [shape="record",label="<f0> MissingModule| <f1> time.time"];
	"time.sleep" [shape="record",label="<f0> MissingModule| <f1> time.sleep"];
	"random" [shape="record",label="<f0> SourceModule| <f1> random"];
	"_random" [shape="record",label="<f0> BuiltinModule| <f1> _random"];
	"os.urandom" [shape="record",label="<f0> MissingModule| <f1> os.urandom"];
	"math.sin" [shape="record",label="<f0> MissingModule| <f1> math.sin"];
	"math.sqrt" [shape="record",label="<f0> MissingModule| <f1> math.sqrt"];
	"math.cos" [shape="record",label="<f0> MissingModule| <f1> math.cos"];
	"math.acos" [shape="record",label="<f0> MissingModule| <f1> math.acos"];
	"math.ceil" [shape="record",label="<f0> MissingModule| <f1> math.ceil"];
	"math.exp" [shape="record",label="<f0> MissingModule| <f1> math.exp"];
	"math.log" [shape="record",label="<f0> MissingModule| <f1> math.log"];
	"math.e" [shape="record",label="<f0> MissingModule| <f1> math.e"];
	"math.pi" [shape="record",label="<f0> MissingModule| <f1> math.pi"];
	"math" [shape="record",label="<f0> BuiltinModule| <f1> math"];
	"warnings.warn" [shape="record",label="<f0> MissingModule| <f1> warnings.warn"];
	"__future__" [shape="record",label="<f0> SourceModule| <f1> __future__"];
	"ctypes.util" [shape="record",label="<f0> SourceModule| <f1> ctypes.util"];
	"errno" [shape="record",label="<f0> BuiltinModule| <f1> errno"];
	"errno.ENOENT" [shape="record",label="<f0> MissingModule| <f1> errno.ENOENT"];
	"errno.EINVAL" [shape="record",label="<f0> MissingModule| <f1> errno.EINVAL"];
	"tempfile" [shape="record",label="<f0> SourceModule| <f1> tempfile"];
	"dummy_thread" [shape="record",label="<f0> SourceModule| <f1> dummy_thread"];
	"fcntl" [shape="record",label="<f0> MissingModule| <f1> fcntl"];
	"StringIO" [shape="record",label="<f0> SourceModule| <f1> StringIO"];
	"io" [shape="record",label="<f0> SourceModule| <f1> io"];
	"_io.DEFAULT_BUFFER_SIZE" [shape="record",label="<f0> MissingModule| <f1> _io.DEFAULT_BUFFER_SIZE"];
	"_io.BytesIO" [shape="record",label="<f0> MissingModule| <f1> _io.BytesIO"];
	"_io.open" [shape="record",label="<f0> MissingModule| <f1> _io.open"];
	"_io.BufferedWriter" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedWriter"];
	"_io.FileIO" [shape="record",label="<f0> MissingModule| <f1> _io.FileIO"];
	"_io.BlockingIOError" [shape="record",label="<f0> MissingModule| <f1> _io.BlockingIOError"];
	"_io.IncrementalNewlineDecoder" [shape="record",label="<f0> MissingModule| <f1> _io.IncrementalNewlineDecoder"];
	"_io.BufferedReader" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedReader"];
	"_io.BufferedRandom" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedRandom"];
	"_io.StringIO" [shape="record",label="<f0> MissingModule| <f1> _io.StringIO"];
	"_io.BufferedRWPair" [shape="record",label="<f0> MissingModule| <f1> _io.BufferedRWPair"];
	"_io.TextIOWrapper" [shape="record",label="<f0> MissingModule| <f1> _io.TextIOWrapper"];
	"_io.UnsupportedOperation" [shape="record",label="<f0> MissingModule| <f1> _io.UnsupportedOperation"];
	"abc" [shape="record",label="<f0> SourceModule| <f1> abc"];
	"_weakrefset" [shape="record",label="<f0> SourceModule| <f1> _weakrefset"];
	"_weakref.ref" [shape="record",label="<f0> MissingModule| <f1> _weakref.ref"];
	"_weakref" [shape="record",label="<f0> BuiltinModule| <f1> _weakref"];
	"_weakref.ReferenceType" [shape="record",label="<f0> MissingModule| <f1> _weakref.ReferenceType"];
	"_weakref.proxy" [shape="record",label="<f0> MissingModule| <f1> _weakref.proxy"];
	"_weakref.getweakrefs" [shape="record",label="<f0> MissingModule| <f1> _weakref.getweakrefs"];
	"_weakref.getweakrefcount" [shape="record",label="<f0> MissingModule| <f1> _weakref.getweakrefcount"];
	"_weakref._remove_dead_weakref" [shape="record",label="<f0> MissingModule| <f1> _weakref._remove_dead_weakref"];
	"_weakref.CallableProxyType" [shape="record",label="<f0> MissingModule| <f1> _weakref.CallableProxyType"];
	"_weakref.ProxyType" [shape="record",label="<f0> MissingModule| <f1> _weakref.ProxyType"];
	"_io" [shape="record",label="<f0> BuiltinModule| <f1> _io"];
	"ctypes.macholib.dyld" [shape="record",label="<f0> SourceModule| <f1> ctypes.macholib.dyld"];
	"ctypes.macholib" [shape="record",label="<f0> Package| <f1> ctypes.macholib"];
	"ctypes.macholib.dylib" [shape="record",label="<f0> SourceModule| <f1> ctypes.macholib.dylib"];
	"ctypes.macholib.framework" [shape="record",label="<f0> SourceModule| <f1> ctypes.macholib.framework"];
	"imp" [shape="record",label="<f0> BuiltinModule| <f1> imp"];
	"subprocess" [shape="record",label="<f0> SourceModule| <f1> subprocess"];
	"_subprocess.STD_OUTPUT_HANDLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STD_OUTPUT_HANDLE"];
	"_subprocess.CREATE_NEW_PROCESS_GROUP" [shape="record",label="<f0> MissingModule| <f1> _subprocess.CREATE_NEW_PROCESS_GROUP"];
	"_subprocess.STD_INPUT_HANDLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STD_INPUT_HANDLE"];
	"_subprocess.STARTF_USESHOWWINDOW" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STARTF_USESHOWWINDOW"];
	"_subprocess.CREATE_NEW_CONSOLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.CREATE_NEW_CONSOLE"];
	"_subprocess.STD_ERROR_HANDLE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STD_ERROR_HANDLE"];
	"_subprocess.STARTF_USESTDHANDLES" [shape="record",label="<f0> MissingModule| <f1> _subprocess.STARTF_USESTDHANDLES"];
	"_subprocess.SW_HIDE" [shape="record",label="<f0> MissingModule| <f1> _subprocess.SW_HIDE"];
	"pickle" [shape="record",label="<f0> SourceModule| <f1> pickle"];
	"doctest" [shape="record",label="<f0> SourceModule| <f1> doctest"];
	"collections.namedtuple" [shape="record",label="<f0> MissingModule| <f1> collections.namedtuple"];
	"difflib" [shape="record",label="<f0> SourceModule| <f1> difflib"];
	"functools" [shape="record",label="<f0> SourceModule| <f1> functools"];
	"_functools.partial" [shape="record",label="<f0> MissingModule| <f1> _functools.partial"];
	"_functools.reduce" [shape="record",label="<f0> MissingModule| <f1> _functools.reduce"];
	"_functools" [shape="record",label="<f0> BuiltinModule| <f1> _functools"];
	"heapq" [shape="record",label="<f0> SourceModule| <f1> heapq"];
	"_heapq" [shape="record",label="<f0> BuiltinModule| <f1> _heapq"];
	"operator.itemgetter" [shape="record",label="<f0> MissingModule| <f1> operator.itemgetter"];
	"operator" [shape="record",label="<f0> BuiltinModule| <f1> operator"];
	"operator.attrgetter" [shape="record",label="<f0> MissingModule| <f1> operator.attrgetter"];
	"operator.eq" [shape="record",label="<f0> MissingModule| <f1> operator.eq"];
	"itertools.imap" [shape="record",label="<f0> MissingModule| <f1> itertools.imap"];
	"itertools.islice" [shape="record",label="<f0> MissingModule| <f1> itertools.islice"];
	"itertools.tee" [shape="record",label="<f0> MissingModule| <f1> itertools.tee"];
	"itertools.izip" [shape="record",label="<f0> MissingModule| <f1> itertools.izip"];
	"itertools.chain" [shape="record",label="<f0> MissingModule| <f1> itertools.chain"];
	"itertools.count" [shape="record",label="<f0> MissingModule| <f1> itertools.count"];
	"unittest" [shape="record",label="<f0> Package| <f1> unittest"];
	"unittest.signals" [shape="record",label="<f0> SourceModule| <f1> unittest.signals"];
	"unittest.main" [shape="record",label="<f0> SourceModule| <f1> unittest.main"];
	"optparse" [shape="record",label="<f0> SourceModule| <f1> optparse"];
	"gettext" [shape="record",label="<f0> SourceModule| <f1> gettext"];
	"locale" [shape="record",label="<f0> SourceModule| <f1> locale"];
	"_locale" [shape="record",label="<f0> BuiltinModule| <f1> _locale"];
	"textwrap" [shape="record",label="<f0> SourceModule| <f1> textwrap"];
	"getopt" [shape="record",label="<f0> SourceModule| <f1> getopt"];
	"unittest.runner" [shape="record",label="<f0> SourceModule| <f1> unittest.runner"];
	"unittest.loader" [shape="record",label="<f0> SourceModule| <f1> unittest.loader"];
	"fnmatch" [shape="record",label="<f0> SourceModule| <f1> fnmatch"];
	"posixpath" [shape="record",label="<f0> SourceModule| <f1> posixpath"];
	"pwd" [shape="record",label="<f0> MissingModule| <f1> pwd"];
	"genericpath" [shape="record",label="<f0> SourceModule| <f1> genericpath"];
	"stat" [shape="record",label="<f0> SourceModule| <f1> stat"];
	"unittest.suite" [shape="record",label="<f0> SourceModule| <f1> unittest.suite"];
	"unittest.case" [shape="record",label="<f0> SourceModule| <f1> unittest.case"];
	"unittest.result" [shape="record",label="<f0> SourceModule| <f1> unittest.result"];
	"unittest.util" [shape="record",label="<f0> SourceModule| <f1> unittest.util"];
	"linecache" [shape="record",label="<f0> SourceModule| <f1> linecache"];
	"org.python.core.PyStringMap" [shape="record",label="<f0> MissingModule| <f1> org.python.core.PyStringMap"];
	"org.python.core" [shape="record",label="<f0> MissingModule| <f1> org.python.core"];
	"org.python" [shape="record",label="<f0> MissingModule| <f1> org.python"];
	"org" [shape="record",label="<f0> MissingModule| <f1> org"];
	"org.PyStringMap" [shape="record",label="<f0> MissingModule| <f1> org.PyStringMap"];
	"marshal" [shape="record",label="<f0> BuiltinModule| <f1> marshal"];
	"copy_reg" [shape="record",label="<f0> SourceModule| <f1> copy_reg"];
	"select" [shape="record",label="<f0> Extension| <f1> select"];
	"_subprocess" [shape="record",label="<f0> BuiltinModule| <f1> _subprocess"];
	"msvcrt" [shape="record",label="<f0> BuiltinModule| <f1> msvcrt"];
	"signal" [shape="record",label="<f0> BuiltinModule| <f1> signal"];
	"gc" [shape="record",label="<f0> BuiltinModule| <f1> gc"];
	"netbios" [shape="record",label="<f0> MissingModule| <f1> netbios"];
	"win32wnet" [shape="record",label="<f0> MissingModule| <f1> win32wnet"];
	"ctypes" [shape="record",label="<f0> Package| <f1> ctypes"];
	"ctypes._endian" [shape="record",label="<f0> SourceModule| <f1> ctypes._endian"];
	"_ctypes._wstring_at_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._wstring_at_addr"];
	"_ctypes._string_at_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._string_at_addr"];
	"_ctypes._cast_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._cast_addr"];
	"_ctypes._memset_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._memset_addr"];
	"_ctypes._memmove_addr" [shape="record",label="<f0> MissingModule| <f1> _ctypes._memmove_addr"];
	"_ctypes.get_last_error" [shape="record",label="<f0> MissingModule| <f1> _ctypes.get_last_error"];
	"_ctypes.set_last_error" [shape="record",label="<f0> MissingModule| <f1> _ctypes.set_last_error"];
	"_ctypes._check_HRESULT" [shape="record",label="<f0> MissingModule| <f1> _ctypes._check_HRESULT"];
	"_ctypes.set_conversion_mode" [shape="record",label="<f0> MissingModule| <f1> _ctypes.set_conversion_mode"];
	"_ctypes._pointer_type_cache" [shape="record",label="<f0> MissingModule| <f1> _ctypes._pointer_type_cache"];
	"_ctypes.POINTER" [shape="record",label="<f0> MissingModule| <f1> _ctypes.POINTER"];
	"_ctypes.pointer" [shape="record",label="<f0> MissingModule| <f1> _ctypes.pointer"];
	"_ctypes._SimpleCData" [shape="record",label="<f0> MissingModule| <f1> _ctypes._SimpleCData"];
	"_ctypes.get_errno" [shape="record",label="<f0> MissingModule| <f1> _ctypes.get_errno"];
	"_ctypes.set_errno" [shape="record",label="<f0> MissingModule| <f1> _ctypes.set_errno"];
	"_ctypes.alignment" [shape="record",label="<f0> MissingModule| <f1> _ctypes.alignment"];
	"_ctypes.addressof" [shape="record",label="<f0> MissingModule| <f1> _ctypes.addressof"];
	"_ctypes.resize" [shape="record",label="<f0> MissingModule| <f1> _ctypes.resize"];
	"_ctypes.byref" [shape="record",label="<f0> MissingModule| <f1> _ctypes.byref"];
	"_ctypes.sizeof" [shape="record",label="<f0> MissingModule| <f1> _ctypes.sizeof"];
	"_ctypes.dlopen" [shape="record",label="<f0> MissingModule| <f1> _ctypes.dlopen"];
	"_ctypes.FUNCFLAG_STDCALL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_STDCALL"];
	"_ctypes.LoadLibrary" [shape="record",label="<f0> MissingModule| <f1> _ctypes.LoadLibrary"];
	"_ctypes.FUNCFLAG_USE_ERRNO" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_USE_ERRNO"];
	"_ctypes.FUNCFLAG_USE_LASTERROR" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_USE_LASTERROR"];
	"_ctypes.FUNCFLAG_PYTHONAPI" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_PYTHONAPI"];
	"_ctypes.FUNCFLAG_CDECL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FUNCFLAG_CDECL"];
	"_ctypes.FormatError" [shape="record",label="<f0> MissingModule| <f1> _ctypes.FormatError"];
	"_ctypes.ArgumentError" [shape="record",label="<f0> MissingModule| <f1> _ctypes.ArgumentError"];
	"_ctypes.RTLD_LOCAL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.RTLD_LOCAL"];
	"_ctypes.RTLD_GLOBAL" [shape="record",label="<f0> MissingModule| <f1> _ctypes.RTLD_GLOBAL"];
	"_ctypes.__version__" [shape="record",label="<f0> MissingModule| <f1> _ctypes.__version__"];
	"_ctypes.CFuncPtr" [shape="record",label="<f0> MissingModule| <f1> _ctypes.CFuncPtr"];
	"_ctypes._Pointer" [shape="record",label="<f0> MissingModule| <f1> _ctypes._Pointer"];
	"_ctypes.Structure" [shape="record",label="<f0> MissingModule| <f1> _ctypes.Structure"];
	"_ctypes.Array" [shape="record",label="<f0> MissingModule| <f1> _ctypes.Array"];
	"_ctypes.Union" [shape="record",label="<f0> MissingModule| <f1> _ctypes.Union"];
	"_ctypes" [shape="record",label="<f0> Extension| <f1> _ctypes"];
	"socket" [shape="record",label="<f0> SourceModule| <f1> socket"];
	"_ssl.RAND_egd" [shape="record",label="<f0> MissingModule| <f1> _ssl.RAND_egd"];
	"_ssl.SSL_ERROR_EOF" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_EOF"];
	"_ssl.SSL_ERROR_WANT_READ" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_READ"];
	"_ssl.SSL_ERROR_WANT_CONNECT" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_CONNECT"];
	"_ssl.SSL_ERROR_ZERO_RETURN" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_ZERO_RETURN"];
	"_ssl.SSL_ERROR_WANT_X509_LOOKUP" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_X509_LOOKUP"];
	"_ssl.SSL_ERROR_SSL" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_SSL"];
	"_ssl.RAND_status" [shape="record",label="<f0> MissingModule| <f1> _ssl.RAND_status"];
	"_ssl.SSL_ERROR_INVALID_ERROR_CODE" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_INVALID_ERROR_CODE"];
	"_ssl.SSL_ERROR_WANT_WRITE" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_WANT_WRITE"];
	"_ssl.RAND_add" [shape="record",label="<f0> MissingModule| <f1> _ssl.RAND_add"];
	"_ssl.SSL_ERROR_SYSCALL" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSL_ERROR_SYSCALL"];
	"_ssl.SSLError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLError"];
	"ssl" [shape="record",label="<f0> SourceModule| <f1> ssl"];
	"calendar" [shape="record",label="<f0> SourceModule| <f1> calendar"];
	"base64" [shape="record",label="<f0> SourceModule| <f1> base64"];
	"_ssl.enum_crls" [shape="record",label="<f0> MissingModule| <f1> _ssl.enum_crls"];
	"_ssl.enum_certificates" [shape="record",label="<f0> MissingModule| <f1> _ssl.enum_certificates"];
	"_ssl._OPENSSL_API_VERSION" [shape="record",label="<f0> MissingModule| <f1> _ssl._OPENSSL_API_VERSION"];
	"_ssl.HAS_ECDH" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_ECDH"];
	"_ssl.HAS_ALPN" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_ALPN"];
	"_ssl.HAS_NPN" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_NPN"];
	"_ssl.HAS_SNI" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_SNI"];
	"_ssl.HAS_TLSv1_3" [shape="record",label="<f0> MissingModule| <f1> _ssl.HAS_TLSv1_3"];
	"_ssl.txt2obj" [shape="record",label="<f0> MissingModule| <f1> _ssl.txt2obj"];
	"_ssl.nid2obj" [shape="record",label="<f0> MissingModule| <f1> _ssl.nid2obj"];
	"_ssl.CERT_REQUIRED" [shape="record",label="<f0> MissingModule| <f1> _ssl.CERT_REQUIRED"];
	"_ssl.CERT_NONE" [shape="record",label="<f0> MissingModule| <f1> _ssl.CERT_NONE"];
	"_ssl.CERT_OPTIONAL" [shape="record",label="<f0> MissingModule| <f1> _ssl.CERT_OPTIONAL"];
	"_ssl.SSLEOFError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLEOFError"];
	"_ssl.SSLWantReadError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLWantReadError"];
	"_ssl.SSLWantWriteError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLWantWriteError"];
	"_ssl.SSLSyscallError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLSyscallError"];
	"_ssl.SSLZeroReturnError" [shape="record",label="<f0> MissingModule| <f1> _ssl.SSLZeroReturnError"];
	"_ssl._SSLContext" [shape="record",label="<f0> MissingModule| <f1> _ssl._SSLContext"];
	"_ssl.OPENSSL_VERSION_NUMBER" [shape="record",label="<f0> MissingModule| <f1> _ssl.OPENSSL_VERSION_NUMBER"];
	"_ssl.OPENSSL_VERSION_INFO" [shape="record",label="<f0> MissingModule| <f1> _ssl.OPENSSL_VERSION_INFO"];
	"_ssl.OPENSSL_VERSION" [shape="record",label="<f0> MissingModule| <f1> _ssl.OPENSSL_VERSION"];
	"contextlib" [shape="record",label="<f0> SourceModule| <f1> contextlib"];
	"socket.SO_TYPE" [shape="record",label="<f0> MissingModule| <f1> socket.SO_TYPE"];
	"socket.SOL_SOCKET" [shape="record",label="<f0> MissingModule| <f1> socket.SOL_SOCKET"];
	"socket.AF_INET" [shape="record",label="<f0> MissingModule| <f1> socket.AF_INET"];
	"socket.create_connection" [shape="record",label="<f0> MissingModule| <f1> socket.create_connection"];
	"socket.SOCK_STREAM" [shape="record",label="<f0> MissingModule| <f1> socket.SOCK_STREAM"];
	"socket.error" [shape="record",label="<f0> MissingModule| <f1> socket.error"];
	"socket.socket" [shape="record",label="<f0> MissingModule| <f1> socket.socket"];
	"socket._delegate_methods" [shape="record",label="<f0> MissingModule| <f1> socket._delegate_methods"];
	"socket._fileobject" [shape="record",label="<f0> MissingModule| <f1> socket._fileobject"];
	"_ssl" [shape="record",label="<f0> Extension| <f1> _ssl"];
	"_socket" [shape="record",label="<f0> Extension| <f1> _socket"];
	"os" [shape="record",label="<f0> SourceModule| <f1> os"];
	"riscosenviron._Environ" [shape="record",label="<f0> MissingModule| <f1> riscosenviron._Environ"];
	"riscosenviron" [shape="record",label="<f0> MissingModule| <f1> riscosenviron"];
	"UserDict" [shape="record",label="<f0> SourceModule| <f1> UserDict"];
	"_abcoll" [shape="record",label="<f0> SourceModule| <f1> _abcoll"];
	"os.path.extsep" [shape="record",label="<f0> MissingModule| <f1> os.path.extsep"];
	"os.path.defpath" [shape="record",label="<f0> MissingModule| <f1> os.path.defpath"];
	"os.path.curdir" [shape="record",label="<f0> MissingModule| <f1> os.path.curdir"];
	"os.path.altsep" [shape="record",label="<f0> MissingModule| <f1> os.path.altsep"];
	"os.path.pathsep" [shape="record",label="<f0> MissingModule| <f1> os.path.pathsep"];
	"os.path.sep" [shape="record",label="<f0> MissingModule| <f1> os.path.sep"];
	"os.path.devnull" [shape="record",label="<f0> MissingModule| <f1> os.path.devnull"];
	"os.path.pardir" [shape="record",label="<f0> MissingModule| <f1> os.path.pardir"];
	"os.path" [shape="record",label="<f0> MissingModule| <f1> os.path"];
	"riscospath" [shape="record",label="<f0> MissingModule| <f1> riscospath"];
	"riscos._exit" [shape="record",label="<f0> MissingModule| <f1> riscos._exit"];
	"riscos" [shape="record",label="<f0> MissingModule| <f1> riscos"];
	"ce._exit" [shape="record",label="<f0> MissingModule| <f1> ce._exit"];
	"ce" [shape="record",label="<f0> MissingModule| <f1> ce"];
	"_emx_link.link" [shape="record",label="<f0> MissingModule| <f1> _emx_link.link"];
	"_emx_link" [shape="record",label="<f0> MissingModule| <f1> _emx_link"];
	"os2emxpath" [shape="record",label="<f0> SourceModule| <f1> os2emxpath"];
	"os2._exit" [shape="record",label="<f0> MissingModule| <f1> os2._exit"];
	"os2" [shape="record",label="<f0> MissingModule| <f1> os2"];
	"ntpath" [shape="record",label="<f0> SourceModule| <f1> ntpath"];
	"nt._isdir" [shape="record",label="<f0> MissingModule| <f1> nt._isdir"];
	"nt._getfullpathname" [shape="record",label="<f0> MissingModule| <f1> nt._getfullpathname"];
	"nt._exit" [shape="record",label="<f0> MissingModule| <f1> nt._exit"];
	"nt" [shape="record",label="<f0> BuiltinModule| <f1> nt"];
	"posix._exit" [shape="record",label="<f0> MissingModule| <f1> posix._exit"];
	"posix" [shape="record",label="<f0> MissingModule| <f1> posix"];
	"pdb" [shape="record",label="<f0> SourceModule| <f1> pdb"];
	"__main__" [shape="record",label="<f0> BuiltinModule| <f1> __main__"];
	"shlex" [shape="record",label="<f0> SourceModule| <f1> shlex"];
	"collections.deque" [shape="record",label="<f0> MissingModule| <f1> collections.deque"];
	"readline" [shape="record",label="<f0> MissingModule| <f1> readline"];
	"repr" [shape="record",label="<f0> SourceModule| <f1> repr"];
	"bdb" [shape="record",label="<f0> SourceModule| <f1> bdb"];
	"cmd" [shape="record",label="<f0> SourceModule| <f1> cmd"];
	"inspect" [shape="record",label="<f0> SourceModule| <f1> inspect"];
	"tokenize" [shape="record",label="<f0> SourceModule| <f1> tokenize"];
	"token" [shape="record",label="<f0> SourceModule| <f1> token"];
	"dis" [shape="record",label="<f0> SourceModule| <f1> dis"];
	"opcode" [shape="record",label="<f0> SourceModule| <f1> opcode"];
	"__builtin__" [shape="record",label="<f0> BuiltinModule| <f1> __builtin__"];
	"types.SimpleNamespace" [shape="record",label="<f0> MissingModule| <f1> types.SimpleNamespace"];
	"ordereddict.OrderedDict" [shape="record",label="<f0> MissingModule| <f1> ordereddict.OrderedDict"];
	"ordereddict" [shape="record",label="<f0> MissingModule| <f1> ordereddict"];
	"collections.OrderedDict" [shape="record",label="<f0> MissingModule| <f1> collections.OrderedDict"];
	"collections.abc.MutableMapping" [shape="record",label="<f0> MissingModule| <f1> collections.abc.MutableMapping"];
	"collections.abc.Iterable" [shape="record",label="<f0> MissingModule| <f1> collections.abc.Iterable"];
	"collections.abc" [shape="record",label="<f0> MissingModule| <f1> collections.abc"];
	"threading.RLock" [shape="record",label="<f0> MissingModule| <f1> threading.RLock"];
	"threading" [shape="record",label="<f0> SourceModule| <f1> threading"];
	"_threading_local" [shape="record",label="<f0> SourceModule| <f1> _threading_local"];
	"threading.current_thread" [shape="record",label="<f0> MissingModule| <f1> threading.current_thread"];
	"_thread.RLock" [shape="record",label="<f0> MissingModule| <f1> _thread.RLock"];
	"_thread" [shape="record",label="<f0> MissingModule| <f1> _thread"];
	"itertools.ifilterfalse" [shape="record",label="<f0> MissingModule| <f1> itertools.ifilterfalse"];
	"itertools.filterfalse" [shape="record",label="<f0> MissingModule| <f1> itertools.filterfalse"];
	"itertools" [shape="record",label="<f0> BuiltinModule| <f1> itertools"];
	"itertools.starmap" [shape="record",label="<f0> MissingModule| <f1> itertools.starmap"];
	"itertools.repeat" [shape="record",label="<f0> MissingModule| <f1> itertools.repeat"];
	"datetime.datetime" [shape="record",label="<f0> MissingModule| <f1> datetime.datetime"];
	"datetime" [shape="record",label="<f0> BuiltinModule| <f1> datetime"];
	"types" [shape="record",label="<f0> SourceModule| <f1> types"];
	"traceback" [shape="record",label="<f0> SourceModule| <f1> traceback"];
	"pprint" [shape="record",label="<f0> SourceModule| <f1> pprint"];
	"collections" [shape="record",label="<f0> SourceModule| <f1> collections"];
	"cPickle.loads" [shape="record",label="<f0> MissingModule| <f1> cPickle.loads"];
	"cPickle.dumps" [shape="record",label="<f0> MissingModule| <f1> cPickle.dumps"];
	"cPickle" [shape="record",label="<f0> BuiltinModule| <f1> cPickle"];
	"keyword" [shape="record",label="<f0> SourceModule| <f1> keyword"];
	"_collections.deque" [shape="record",label="<f0> MissingModule| <f1> _collections.deque"];
	"_collections.defaultdict" [shape="record",label="<f0> MissingModule| <f1> _collections.defaultdict"];
	"_collections" [shape="record",label="<f0> BuiltinModule| <f1> _collections"];
	"sre_constants" [shape="record",label="<f0> SourceModule| <f1> sre_constants"];
	"_sre.MAXREPEAT" [shape="record",label="<f0> MissingModule| <f1> _sre.MAXREPEAT"];
	"_sre" [shape="record",label="<f0> BuiltinModule| <f1> _sre"];
	"re" [shape="record",label="<f0> SourceModule| <f1> re"];
	"sre_parse" [shape="record",label="<f0> SourceModule| <f1> sre_parse"];
	"sre_compile" [shape="record",label="<f0> SourceModule| <f1> sre_compile"];
	"array" [shape="record",label="<f0> BuiltinModule| <f1> array"];
	"warnings" [shape="record",label="<f0> SourceModule| <f1> warnings"];
	"_warnings.warn_explicit" [shape="record",label="<f0> MissingModule| <f1> _warnings.warn_explicit"];
	"_warnings.filters" [shape="record",label="<f0> MissingModule| <f1> _warnings.filters"];
	"_warnings.once_registry" [shape="record",label="<f0> MissingModule| <f1> _warnings.once_registry"];
	"_warnings.default_action" [shape="record",label="<f0> MissingModule| <f1> _warnings.default_action"];
	"_warnings.warn" [shape="record",label="<f0> MissingModule| <f1> _warnings.warn"];
	"_warnings" [shape="record",label="<f0> BuiltinModule| <f1> _warnings"];
	"sys" [shape="record",label="<f0> BuiltinModule| <f1> sys"];
	"copy" [shape="record",label="<f0> SourceModule| <f1> copy"];
	"copy.deepcopy" [shape="record",label="<f0> MissingModule| <f1> copy.deepcopy"];
	"weakref" [shape="record",label="<f0> SourceModule| <f1> weakref"];
	"exceptions.ReferenceError" [shape="record",label="<f0> MissingModule| <f1> exceptions.ReferenceError"];
	"exceptions" [shape="record",label="<f0> BuiltinModule| <f1> exceptions"];
	"string" [shape="record",label="<f0> SourceModule| <f1> string"];
	"strop.whitespace" [shape="record",label="<f0> MissingModule| <f1> strop.whitespace"];
	"strop.maketrans" [shape="record",label="<f0> MissingModule| <f1> strop.maketrans"];
	"strop.lowercase" [shape="record",label="<f0> MissingModule| <f1> strop.lowercase"];
	"strop.uppercase" [shape="record",label="<f0> MissingModule| <f1> strop.uppercase"];
	"strop" [shape="record",label="<f0> BuiltinModule| <f1> strop"];
	subgraph "cluster_logging" {
		label="logging";
	}
	subgraph "cluster_unittest" {
		label="unittest";
		"unittest" -> "unittest.util" [style="dotted"];
		"unittest" -> "unittest.result" [style="dotted"];
		"unittest" -> "unittest.case" [style="dotted"];
		"unittest" -> "unittest.suite" [style="dotted"];
		"unittest" -> "unittest.loader" [style="dotted"];
		"unittest" -> "unittest.runner" [style="dotted"];
		"unittest" -> "unittest.main" [style="dotted"];
		"unittest" -> "unittest.signals" [style="dotted"];
	}
	subgraph "cluster_ctypes.macholib" {
		label="ctypes.macholib";
		"ctypes.macholib" -> "ctypes.macholib.dyld" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.framework" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.dylib" [style="dotted"];
	}
	subgraph "cluster_ctypes" {
		label="ctypes";
		"ctypes" -> "ctypes._endian" [style="dotted"];
		"ctypes" -> "ctypes.util" [style="dotted"];
		"ctypes" -> "ctypes.macholib" [style="dotted"];
	}
	subgraph "cluster_encodings" {
		label="encodings";
		"encodings" -> "encodings.aliases" [style="dotted"];
	}
	"<ModuleGraph>" -> "F:\GSoC\Moz\pyparsing\pyparsing.py" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "string" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "weakref" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "copy" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "sys" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "warnings" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "re" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "sre_constants" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "collections" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "pprint" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "traceback" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "types" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "datetime" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "datetime.datetime" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "itertools" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "itertools.filterfalse" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "itertools.ifilterfalse" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "_thread" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "_thread.RLock" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "threading" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "threading.RLock" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "collections.abc" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "collections.abc.Iterable" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "collections.abc.MutableMapping" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "collections.OrderedDict" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "ordereddict" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "ordereddict.OrderedDict" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "types.SimpleNamespace" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "__builtin__" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "inspect" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "pdb" [];
	"F:\GSoC\Moz\pyparsing\pyparsing.py" -> "uuid" [];
	"uuid" -> "os" [];
	"uuid" -> "socket" [];
	"uuid" -> "re" [];
	"uuid" -> "ctypes" [];
	"uuid" -> "win32wnet" [];
	"uuid" -> "netbios" [];
	"uuid" -> "sys" [];
	"uuid" -> "random" [];
	"uuid" -> "time" [];
	"uuid" -> "hashlib" [];
	"uuid" -> "hashlib.md5" [];
	"uuid" -> "hashlib.sha1" [];
	"hashlib" -> "_sha" [];
	"hashlib" -> "_md5" [];
	"hashlib" -> "_sha256" [];
	"hashlib" -> "_sha512" [];
	"hashlib" -> "_hashlib" [];
	"hashlib" -> "logging" [];
	"hashlib" -> "_hashlib.pbkdf2_hmac" [];
	"hashlib" -> "binascii" [];
	"hashlib" -> "struct" [];
	"hashlib" -> "hashlib.md5" [];
	"hashlib" -> "hashlib.sha1" [];
	"struct" -> "_struct" [];
	"struct" -> "_struct._clearcache" [];
	"struct" -> "_struct.__doc__" [];
	"struct" -> "struct.calcsize" [];
	"_struct" -> "_struct._clearcache" [];
	"_struct" -> "_struct.__doc__" [];
	"binascii" -> "binascii.hexlify" [];
	"logging" -> "sys" [];
	"logging" -> "os" [];
	"logging" -> "time" [];
	"logging" -> "cStringIO" [];
	"logging" -> "traceback" [];
	"logging" -> "warnings" [];
	"logging" -> "weakref" [];
	"logging" -> "collections" [];
	"logging" -> "codecs" [];
	"logging" -> "thread" [];
	"logging" -> "threading" [];
	"logging" -> "atexit" [];
	"atexit" -> "sys" [];
	"atexit" -> "traceback" [];
	"thread" -> "thread.get_ident" [];
	"thread" -> "thread.stack_size" [];
	"thread" -> "thread._local" [];
	"codecs" -> "__builtin__" [];
	"codecs" -> "sys" [];
	"codecs" -> "_codecs" [];
	"codecs" -> "encodings" [];
	"encodings" -> "codecs" [];
	"encodings" -> "__builtin__" [];
	"cStringIO" -> "cStringIO.StringIO" [];
	"_hashlib" -> "_hashlib.pbkdf2_hmac" [];
	"time" -> "time.sleep" [];
	"time" -> "time.time" [];
	"time" -> "time.strptime" [];
	"random" -> "__future__" [];
	"random" -> "warnings" [];
	"random" -> "warnings.warn" [];
	"random" -> "types" [];
	"random" -> "math" [];
	"random" -> "math.pi" [];
	"random" -> "math.e" [];
	"random" -> "math.log" [];
	"random" -> "math.exp" [];
	"random" -> "math.ceil" [];
	"random" -> "math.acos" [];
	"random" -> "math.cos" [];
	"random" -> "math.sqrt" [];
	"random" -> "math.sin" [];
	"random" -> "os" [];
	"random" -> "os.urandom" [];
	"random" -> "binascii" [];
	"random" -> "binascii.hexlify" [];
	"random" -> "hashlib" [];
	"random" -> "_random" [];
	"random" -> "time" [];
	"math" -> "math.pi" [];
	"math" -> "math.e" [];
	"math" -> "math.log" [];
	"math" -> "math.exp" [];
	"math" -> "math.ceil" [];
	"math" -> "math.acos" [];
	"math" -> "math.cos" [];
	"math" -> "math.sqrt" [];
	"math" -> "math.sin" [];
	"ctypes.util" -> "os" [];
	"ctypes.util" -> "subprocess" [];
	"ctypes.util" -> "sys" [];
	"ctypes.util" -> "imp" [];
	"ctypes.util" -> "re" [];
	"ctypes.util" -> "tempfile" [];
	"ctypes.util" -> "errno" [];
	"ctypes.util" -> "struct" [];
	"errno" -> "errno.EINVAL" [];
	"errno" -> "errno.ENOENT" [];
	"tempfile" -> "io" [];
	"tempfile" -> "os" [];
	"tempfile" -> "errno" [];
	"tempfile" -> "random" [];
	"tempfile" -> "cStringIO" [];
	"tempfile" -> "cStringIO.StringIO" [];
	"tempfile" -> "StringIO" [];
	"tempfile" -> "fcntl" [];
	"tempfile" -> "thread" [];
	"tempfile" -> "dummy_thread" [];
	"dummy_thread" -> "traceback" [];
	"StringIO" -> "errno" [];
	"StringIO" -> "errno.EINVAL" [];
	"StringIO" -> "sys" [];
	"io" -> "_io" [];
	"io" -> "abc" [];
	"io" -> "_io.UnsupportedOperation" [];
	"io" -> "_io.TextIOWrapper" [];
	"io" -> "_io.BufferedRWPair" [];
	"io" -> "_io.StringIO" [];
	"io" -> "_io.BufferedRandom" [];
	"io" -> "_io.BufferedReader" [];
	"io" -> "_io.IncrementalNewlineDecoder" [];
	"io" -> "_io.BlockingIOError" [];
	"io" -> "_io.FileIO" [];
	"io" -> "_io.BufferedWriter" [];
	"io" -> "_io.open" [];
	"io" -> "_io.BytesIO" [];
	"io" -> "_io.DEFAULT_BUFFER_SIZE" [];
	"abc" -> "types" [];
	"abc" -> "_weakrefset" [];
	"_weakrefset" -> "_weakref" [];
	"_weakrefset" -> "_weakref.ref" [];
	"_weakref" -> "_weakref.ProxyType" [];
	"_weakref" -> "_weakref.CallableProxyType" [];
	"_weakref" -> "_weakref._remove_dead_weakref" [];
	"_weakref" -> "_weakref.getweakrefcount" [];
	"_weakref" -> "_weakref.getweakrefs" [];
	"_weakref" -> "_weakref.proxy" [];
	"_weakref" -> "_weakref.ReferenceType" [];
	"_weakref" -> "_weakref.ref" [];
	"_io" -> "_io.UnsupportedOperation" [];
	"_io" -> "_io.TextIOWrapper" [];
	"_io" -> "_io.BufferedRWPair" [];
	"_io" -> "_io.StringIO" [];
	"_io" -> "_io.BufferedRandom" [];
	"_io" -> "_io.BufferedReader" [];
	"_io" -> "_io.IncrementalNewlineDecoder" [];
	"_io" -> "_io.BlockingIOError" [];
	"_io" -> "_io.FileIO" [];
	"_io" -> "_io.BufferedWriter" [];
	"_io" -> "_io.open" [];
	"_io" -> "_io.BytesIO" [];
	"_io" -> "_io.DEFAULT_BUFFER_SIZE" [];
	"ctypes.macholib.dyld" -> "os" [];
	"ctypes.macholib.dyld" -> "itertools" [];
	"ctypes.macholib.dylib" -> "re" [];
	"ctypes.macholib.framework" -> "re" [];
	"subprocess" -> "sys" [];
	"subprocess" -> "os" [];
	"subprocess" -> "types" [];
	"subprocess" -> "traceback" [];
	"subprocess" -> "gc" [];
	"subprocess" -> "signal" [];
	"subprocess" -> "errno" [];
	"subprocess" -> "threading" [];
	"subprocess" -> "msvcrt" [];
	"subprocess" -> "_subprocess" [];
	"subprocess" -> "select" [];
	"subprocess" -> "fcntl" [];
	"subprocess" -> "pickle" [];
	"subprocess" -> "_subprocess.SW_HIDE" [];
	"subprocess" -> "_subprocess.STARTF_USESTDHANDLES" [];
	"subprocess" -> "_subprocess.STD_ERROR_HANDLE" [];
	"subprocess" -> "_subprocess.CREATE_NEW_CONSOLE" [];
	"subprocess" -> "_subprocess.STARTF_USESHOWWINDOW" [];
	"subprocess" -> "_subprocess.STD_INPUT_HANDLE" [];
	"subprocess" -> "_subprocess.CREATE_NEW_PROCESS_GROUP" [];
	"subprocess" -> "_subprocess.STD_OUTPUT_HANDLE" [];
	"pickle" -> "types" [];
	"pickle" -> "copy_reg" [];
	"pickle" -> "marshal" [];
	"pickle" -> "sys" [];
	"pickle" -> "struct" [];
	"pickle" -> "re" [];
	"pickle" -> "org.python.core" [];
	"pickle" -> "org.python.core.PyStringMap" [];
	"pickle" -> "binascii" [];
	"pickle" -> "cStringIO" [];
	"pickle" -> "cStringIO.StringIO" [];
	"pickle" -> "StringIO" [];
	"pickle" -> "doctest" [];
	"doctest" -> "__future__" [];
	"doctest" -> "sys" [];
	"doctest" -> "traceback" [];
	"doctest" -> "inspect" [];
	"doctest" -> "linecache" [];
	"doctest" -> "os" [];
	"doctest" -> "re" [];
	"doctest" -> "unittest" [];
	"doctest" -> "difflib" [];
	"doctest" -> "pdb" [];
	"doctest" -> "tempfile" [];
	"doctest" -> "warnings" [];
	"doctest" -> "StringIO" [];
	"doctest" -> "collections" [];
	"doctest" -> "collections.namedtuple" [];
	"doctest" -> "types" [];
	"difflib" -> "heapq" [];
	"difflib" -> "collections" [];
	"difflib" -> "collections.namedtuple" [];
	"difflib" -> "functools" [];
	"difflib" -> "re" [];
	"difflib" -> "doctest" [];
	"difflib" -> "difflib" [];
	"functools" -> "_functools" [];
	"functools" -> "_functools.reduce" [];
	"functools" -> "_functools.partial" [];
	"_functools" -> "_functools.reduce" [];
	"_functools" -> "_functools.partial" [];
	"heapq" -> "itertools" [];
	"heapq" -> "itertools.count" [];
	"heapq" -> "itertools.chain" [];
	"heapq" -> "itertools.izip" [];
	"heapq" -> "itertools.tee" [];
	"heapq" -> "itertools.islice" [];
	"heapq" -> "itertools.imap" [];
	"heapq" -> "operator" [];
	"heapq" -> "operator.itemgetter" [];
	"heapq" -> "_heapq" [];
	"heapq" -> "doctest" [];
	"operator" -> "operator.eq" [];
	"operator" -> "operator.itemgetter" [];
	"operator" -> "operator.attrgetter" [];
	"unittest.signals" -> "signal" [];
	"unittest.signals" -> "weakref" [];
	"unittest.signals" -> "functools" [];
	"unittest.main" -> "sys" [];
	"unittest.main" -> "os" [];
	"unittest.main" -> "types" [];
	"unittest.main" -> "getopt" [];
	"unittest.main" -> "optparse" [];
	"optparse" -> "sys" [];
	"optparse" -> "os" [];
	"optparse" -> "types" [];
	"optparse" -> "textwrap" [];
	"optparse" -> "gettext" [];
	"optparse" -> "__builtin__" [];
	"gettext" -> "locale" [];
	"gettext" -> "copy" [];
	"gettext" -> "os" [];
	"gettext" -> "re" [];
	"gettext" -> "struct" [];
	"gettext" -> "sys" [];
	"gettext" -> "errno" [];
	"gettext" -> "errno.ENOENT" [];
	"gettext" -> "__builtin__" [];
	"locale" -> "sys" [];
	"locale" -> "encodings" [];
	"locale" -> "re" [];
	"locale" -> "operator" [];
	"locale" -> "functools" [];
	"locale" -> "_locale" [];
	"locale" -> "os" [];
	"textwrap" -> "string" [];
	"textwrap" -> "re" [];
	"getopt" -> "os" [];
	"getopt" -> "sys" [];
	"unittest.runner" -> "sys" [];
	"unittest.runner" -> "time" [];
	"unittest.loader" -> "os" [];
	"unittest.loader" -> "re" [];
	"unittest.loader" -> "sys" [];
	"unittest.loader" -> "traceback" [];
	"unittest.loader" -> "types" [];
	"unittest.loader" -> "functools" [];
	"unittest.loader" -> "fnmatch" [];
	"fnmatch" -> "re" [];
	"fnmatch" -> "os" [];
	"fnmatch" -> "posixpath" [];
	"posixpath" -> "os" [];
	"posixpath" -> "sys" [];
	"posixpath" -> "stat" [];
	"posixpath" -> "genericpath" [];
	"posixpath" -> "warnings" [];
	"posixpath" -> "pwd" [];
	"posixpath" -> "re" [];
	"genericpath" -> "os" [];
	"genericpath" -> "stat" [];
	"unittest.suite" -> "sys" [];
	"unittest.case" -> "collections" [];
	"unittest.case" -> "sys" [];
	"unittest.case" -> "functools" [];
	"unittest.case" -> "difflib" [];
	"unittest.case" -> "pprint" [];
	"unittest.case" -> "re" [];
	"unittest.case" -> "types" [];
	"unittest.case" -> "warnings" [];
	"unittest.result" -> "os" [];
	"unittest.result" -> "sys" [];
	"unittest.result" -> "traceback" [];
	"unittest.result" -> "StringIO" [];
	"unittest.result" -> "functools" [];
	"unittest.util" -> "collections" [];
	"unittest.util" -> "collections.namedtuple" [];
	"unittest.util" -> "collections.OrderedDict" [];
	"linecache" -> "sys" [];
	"linecache" -> "os" [];
	"org.python.core" -> "org.python" [];
	"org.python.core" -> "org.python.core.PyStringMap" [];
	"org.python" -> "org" [];
	"org" -> "org.PyStringMap" [];
	"copy_reg" -> "types" [];
	"_subprocess" -> "_subprocess.SW_HIDE" [];
	"_subprocess" -> "_subprocess.STARTF_USESTDHANDLES" [];
	"_subprocess" -> "_subprocess.STD_ERROR_HANDLE" [];
	"_subprocess" -> "_subprocess.CREATE_NEW_CONSOLE" [];
	"_subprocess" -> "_subprocess.STARTF_USESHOWWINDOW" [];
	"_subprocess" -> "_subprocess.STD_INPUT_HANDLE" [];
	"_subprocess" -> "_subprocess.CREATE_NEW_PROCESS_GROUP" [];
	"_subprocess" -> "_subprocess.STD_OUTPUT_HANDLE" [];
	"ctypes" -> "os" [];
	"ctypes" -> "sys" [];
	"ctypes" -> "_ctypes" [];
	"ctypes" -> "_ctypes.Union" [];
	"ctypes" -> "_ctypes.Array" [];
	"ctypes" -> "_ctypes.Structure" [];
	"ctypes" -> "_ctypes._Pointer" [];
	"ctypes" -> "_ctypes.CFuncPtr" [];
	"ctypes" -> "_ctypes.__version__" [];
	"ctypes" -> "_ctypes.RTLD_GLOBAL" [];
	"ctypes" -> "_ctypes.RTLD_LOCAL" [];
	"ctypes" -> "_ctypes.ArgumentError" [];
	"ctypes" -> "struct" [];
	"ctypes" -> "struct.calcsize" [];
	"ctypes" -> "_ctypes.FormatError" [];
	"ctypes" -> "_ctypes.FUNCFLAG_CDECL" [];
	"ctypes" -> "_ctypes.FUNCFLAG_PYTHONAPI" [];
	"ctypes" -> "_ctypes.FUNCFLAG_USE_LASTERROR" [];
	"ctypes" -> "_ctypes.FUNCFLAG_USE_ERRNO" [];
	"ctypes" -> "_ctypes.LoadLibrary" [];
	"ctypes" -> "_ctypes.FUNCFLAG_STDCALL" [];
	"ctypes" -> "_ctypes.dlopen" [];
	"ctypes" -> "_ctypes.sizeof" [];
	"ctypes" -> "_ctypes.byref" [];
	"ctypes" -> "_ctypes.resize" [];
	"ctypes" -> "_ctypes.addressof" [];
	"ctypes" -> "_ctypes.alignment" [];
	"ctypes" -> "_ctypes.set_errno" [];
	"ctypes" -> "_ctypes.get_errno" [];
	"ctypes" -> "_ctypes._SimpleCData" [];
	"ctypes" -> "_ctypes.pointer" [];
	"ctypes" -> "_ctypes.POINTER" [];
	"ctypes" -> "_ctypes._pointer_type_cache" [];
	"ctypes" -> "_ctypes.set_conversion_mode" [];
	"ctypes" -> "_ctypes._check_HRESULT" [];
	"ctypes" -> "_ctypes.set_last_error" [];
	"ctypes" -> "_ctypes.get_last_error" [];
	"ctypes" -> "_ctypes._memmove_addr" [];
	"ctypes" -> "_ctypes._memset_addr" [];
	"ctypes" -> "_ctypes._cast_addr" [];
	"ctypes" -> "_ctypes._string_at_addr" [];
	"ctypes" -> "_ctypes._wstring_at_addr" [];
	"ctypes._endian" -> "sys" [];
	"_ctypes" -> "_ctypes.Union" [];
	"_ctypes" -> "_ctypes.Array" [];
	"_ctypes" -> "_ctypes.Structure" [];
	"_ctypes" -> "_ctypes._Pointer" [];
	"_ctypes" -> "_ctypes.CFuncPtr" [];
	"_ctypes" -> "_ctypes.__version__" [];
	"_ctypes" -> "_ctypes.RTLD_GLOBAL" [];
	"_ctypes" -> "_ctypes.RTLD_LOCAL" [];
	"_ctypes" -> "_ctypes.ArgumentError" [];
	"_ctypes" -> "_ctypes.FormatError" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_CDECL" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_PYTHONAPI" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_USE_LASTERROR" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_USE_ERRNO" [];
	"_ctypes" -> "_ctypes.LoadLibrary" [];
	"_ctypes" -> "_ctypes.FUNCFLAG_STDCALL" [];
	"_ctypes" -> "_ctypes.dlopen" [];
	"_ctypes" -> "_ctypes.sizeof" [];
	"_ctypes" -> "_ctypes.byref" [];
	"_ctypes" -> "_ctypes.resize" [];
	"_ctypes" -> "_ctypes.addressof" [];
	"_ctypes" -> "_ctypes.alignment" [];
	"_ctypes" -> "_ctypes.set_errno" [];
	"_ctypes" -> "_ctypes.get_errno" [];
	"_ctypes" -> "_ctypes._SimpleCData" [];
	"_ctypes" -> "_ctypes.pointer" [];
	"_ctypes" -> "_ctypes.POINTER" [];
	"_ctypes" -> "_ctypes._pointer_type_cache" [];
	"_ctypes" -> "_ctypes.set_conversion_mode" [];
	"_ctypes" -> "_ctypes._check_HRESULT" [];
	"_ctypes" -> "_ctypes.set_last_error" [];
	"_ctypes" -> "_ctypes.get_last_error" [];
	"_ctypes" -> "_ctypes._memmove_addr" [];
	"_ctypes" -> "_ctypes._memset_addr" [];
	"_ctypes" -> "_ctypes._cast_addr" [];
	"_ctypes" -> "_ctypes._string_at_addr" [];
	"_ctypes" -> "_ctypes._wstring_at_addr" [];
	"socket" -> "_socket" [];
	"socket" -> "functools" [];
	"socket" -> "types" [];
	"socket" -> "_ssl" [];
	"socket" -> "socket._fileobject" [];
	"socket" -> "socket._delegate_methods" [];
	"socket" -> "socket.socket" [];
	"socket" -> "socket.error" [];
	"socket" -> "socket.SOCK_STREAM" [];
	"socket" -> "socket.create_connection" [];
	"socket" -> "socket.AF_INET" [];
	"socket" -> "socket.SOL_SOCKET" [];
	"socket" -> "socket.SO_TYPE" [];
	"socket" -> "ssl" [];
	"socket" -> "_ssl.SSLError" [];
	"socket" -> "_ssl.SSL_ERROR_SYSCALL" [];
	"socket" -> "_ssl.RAND_add" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_WRITE" [];
	"socket" -> "_ssl.SSL_ERROR_INVALID_ERROR_CODE" [];
	"socket" -> "_ssl.RAND_status" [];
	"socket" -> "_ssl.SSL_ERROR_SSL" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_X509_LOOKUP" [];
	"socket" -> "_ssl.SSL_ERROR_ZERO_RETURN" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_CONNECT" [];
	"socket" -> "_ssl.SSL_ERROR_WANT_READ" [];
	"socket" -> "_ssl.SSL_ERROR_EOF" [];
	"socket" -> "_ssl.RAND_egd" [];
	"socket" -> "os" [];
	"socket" -> "sys" [];
	"socket" -> "warnings" [];
	"socket" -> "cStringIO" [];
	"socket" -> "cStringIO.StringIO" [];
	"socket" -> "StringIO" [];
	"socket" -> "errno" [];
	"ssl" -> "textwrap" [];
	"ssl" -> "re" [];
	"ssl" -> "sys" [];
	"ssl" -> "os" [];
	"ssl" -> "collections" [];
	"ssl" -> "collections.namedtuple" [];
	"ssl" -> "contextlib" [];
	"ssl" -> "_ssl" [];
	"ssl" -> "_ssl.OPENSSL_VERSION" [];
	"ssl" -> "_ssl.OPENSSL_VERSION_INFO" [];
	"ssl" -> "_ssl.OPENSSL_VERSION_NUMBER" [];
	"ssl" -> "_ssl._SSLContext" [];
	"ssl" -> "_ssl.SSLZeroReturnError" [];
	"ssl" -> "_ssl.SSLSyscallError" [];
	"ssl" -> "_ssl.SSLWantWriteError" [];
	"ssl" -> "_ssl.SSLError" [];
	"ssl" -> "_ssl.SSLWantReadError" [];
	"ssl" -> "_ssl.SSLEOFError" [];
	"ssl" -> "_ssl.CERT_OPTIONAL" [];
	"ssl" -> "_ssl.CERT_NONE" [];
	"ssl" -> "_ssl.CERT_REQUIRED" [];
	"ssl" -> "_ssl.nid2obj" [];
	"ssl" -> "_ssl.txt2obj" [];
	"ssl" -> "_ssl.RAND_add" [];
	"ssl" -> "_ssl.RAND_status" [];
	"ssl" -> "_ssl.RAND_egd" [];
	"ssl" -> "_ssl.HAS_TLSv1_3" [];
	"ssl" -> "_ssl.HAS_SNI" [];
	"ssl" -> "_ssl.HAS_NPN" [];
	"ssl" -> "_ssl.HAS_ALPN" [];
	"ssl" -> "_ssl.HAS_ECDH" [];
	"ssl" -> "_ssl._OPENSSL_API_VERSION" [];
	"ssl" -> "socket" [];
	"ssl" -> "socket._fileobject" [];
	"ssl" -> "socket._delegate_methods" [];
	"ssl" -> "socket.socket" [];
	"ssl" -> "socket.error" [];
	"ssl" -> "_ssl.enum_certificates" [];
	"ssl" -> "_ssl.enum_crls" [];
	"ssl" -> "socket.SOCK_STREAM" [];
	"ssl" -> "socket.create_connection" [];
	"ssl" -> "socket.AF_INET" [];
	"ssl" -> "socket.SOL_SOCKET" [];
	"ssl" -> "socket.SO_TYPE" [];
	"ssl" -> "base64" [];
	"ssl" -> "errno" [];
	"ssl" -> "warnings" [];
	"ssl" -> "time" [];
	"ssl" -> "time.strptime" [];
	"ssl" -> "calendar" [];
	"calendar" -> "sys" [];
	"calendar" -> "datetime" [];
	"calendar" -> "locale" [];
	"calendar" -> "optparse" [];
	"base64" -> "re" [];
	"base64" -> "struct" [];
	"base64" -> "string" [];
	"base64" -> "binascii" [];
	"base64" -> "sys" [];
	"base64" -> "getopt" [];
	"contextlib" -> "sys" [];
	"contextlib" -> "functools" [];
	"contextlib" -> "warnings" [];
	"contextlib" -> "warnings.warn" [];
	"_ssl" -> "_ssl.OPENSSL_VERSION" [];
	"_ssl" -> "_ssl.OPENSSL_VERSION_INFO" [];
	"_ssl" -> "_ssl.OPENSSL_VERSION_NUMBER" [];
	"_ssl" -> "_ssl._SSLContext" [];
	"_ssl" -> "_ssl.SSLZeroReturnError" [];
	"_ssl" -> "_ssl.SSLSyscallError" [];
	"_ssl" -> "_ssl.SSLWantWriteError" [];
	"_ssl" -> "_ssl.SSLError" [];
	"_ssl" -> "_ssl.SSLWantReadError" [];
	"_ssl" -> "_ssl.SSLEOFError" [];
	"_ssl" -> "_ssl.CERT_OPTIONAL" [];
	"_ssl" -> "_ssl.CERT_NONE" [];
	"_ssl" -> "_ssl.CERT_REQUIRED" [];
	"_ssl" -> "_ssl.nid2obj" [];
	"_ssl" -> "_ssl.txt2obj" [];
	"_ssl" -> "_ssl.RAND_add" [];
	"_ssl" -> "_ssl.RAND_status" [];
	"_ssl" -> "_ssl.RAND_egd" [];
	"_ssl" -> "_ssl.HAS_TLSv1_3" [];
	"_ssl" -> "_ssl.HAS_SNI" [];
	"_ssl" -> "_ssl.HAS_NPN" [];
	"_ssl" -> "_ssl.HAS_ALPN" [];
	"_ssl" -> "_ssl.HAS_ECDH" [];
	"_ssl" -> "_ssl._OPENSSL_API_VERSION" [];
	"_ssl" -> "_ssl.enum_certificates" [];
	"_ssl" -> "_ssl.enum_crls" [];
	"_ssl" -> "_ssl.SSL_ERROR_SYSCALL" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_WRITE" [];
	"_ssl" -> "_ssl.SSL_ERROR_INVALID_ERROR_CODE" [];
	"_ssl" -> "_ssl.SSL_ERROR_SSL" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_X509_LOOKUP" [];
	"_ssl" -> "_ssl.SSL_ERROR_ZERO_RETURN" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_CONNECT" [];
	"_ssl" -> "_ssl.SSL_ERROR_WANT_READ" [];
	"_ssl" -> "_ssl.SSL_ERROR_EOF" [];
	"os" -> "sys" [];
	"os" -> "errno" [];
	"os" -> "posix" [];
	"os" -> "posix._exit" [];
	"os" -> "posixpath" [];
	"os" -> "nt" [];
	"os" -> "nt._exit" [];
	"os" -> "ntpath" [];
	"os" -> "os2" [];
	"os" -> "os2._exit" [];
	"os" -> "os2emxpath" [];
	"os" -> "_emx_link" [];
	"os" -> "_emx_link.link" [];
	"os" -> "ce" [];
	"os" -> "ce._exit" [];
	"os" -> "riscos" [];
	"os" -> "riscos._exit" [];
	"os" -> "riscospath" [];
	"os" -> "os.path" [];
	"os" -> "os.path.pardir" [];
	"os" -> "os.path.devnull" [];
	"os" -> "os.path.sep" [];
	"os" -> "os.path.pathsep" [];
	"os" -> "os.path.altsep" [];
	"os" -> "os.path.curdir" [];
	"os" -> "os.path.defpath" [];
	"os" -> "os.path.extsep" [];
	"os" -> "UserDict" [];
	"os" -> "riscosenviron" [];
	"os" -> "riscosenviron._Environ" [];
	"os" -> "warnings" [];
	"os" -> "os.urandom" [];
	"os" -> "subprocess" [];
	"os" -> "copy_reg" [];
	"riscosenviron" -> "riscosenviron._Environ" [];
	"UserDict" -> "warnings" [];
	"UserDict" -> "copy" [];
	"UserDict" -> "_abcoll" [];
	"_abcoll" -> "abc" [];
	"_abcoll" -> "sys" [];
	"os.path" -> "os" [];
	"os.path" -> "os.path.pardir" [];
	"os.path" -> "os.path.devnull" [];
	"os.path" -> "os.path.sep" [];
	"os.path" -> "os.path.pathsep" [];
	"os.path" -> "os.path.altsep" [];
	"os.path" -> "os.path.curdir" [];
	"os.path" -> "os.path.defpath" [];
	"os.path" -> "os.path.extsep" [];
	"riscos" -> "riscos._exit" [];
	"ce" -> "ce._exit" [];
	"_emx_link" -> "_emx_link.link" [];
	"os2emxpath" -> "os" [];
	"os2emxpath" -> "stat" [];
	"os2emxpath" -> "genericpath" [];
	"os2emxpath" -> "ntpath" [];
	"os2" -> "os2._exit" [];
	"ntpath" -> "os" [];
	"ntpath" -> "sys" [];
	"ntpath" -> "stat" [];
	"ntpath" -> "genericpath" [];
	"ntpath" -> "warnings" [];
	"ntpath" -> "string" [];
	"ntpath" -> "nt" [];
	"ntpath" -> "nt._getfullpathname" [];
	"ntpath" -> "nt._isdir" [];
	"nt" -> "nt._exit" [];
	"nt" -> "nt._getfullpathname" [];
	"nt" -> "nt._isdir" [];
	"posix" -> "posix._exit" [];
	"pdb" -> "sys" [];
	"pdb" -> "linecache" [];
	"pdb" -> "cmd" [];
	"pdb" -> "bdb" [];
	"pdb" -> "repr" [];
	"pdb" -> "os" [];
	"pdb" -> "re" [];
	"pdb" -> "pprint" [];
	"pdb" -> "traceback" [];
	"pdb" -> "readline" [];
	"pdb" -> "shlex" [];
	"pdb" -> "__main__" [];
	"pdb" -> "pdb" [];
	"shlex" -> "os.path" [];
	"shlex" -> "sys" [];
	"shlex" -> "collections" [];
	"shlex" -> "collections.deque" [];
	"shlex" -> "cStringIO" [];
	"shlex" -> "cStringIO.StringIO" [];
	"shlex" -> "StringIO" [];
	"repr" -> "__builtin__" [];
	"repr" -> "itertools" [];
	"repr" -> "itertools.islice" [];
	"bdb" -> "fnmatch" [];
	"bdb" -> "sys" [];
	"bdb" -> "os" [];
	"bdb" -> "types" [];
	"bdb" -> "linecache" [];
	"bdb" -> "repr" [];
	"bdb" -> "__main__" [];
	"cmd" -> "string" [];
	"cmd" -> "sys" [];
	"cmd" -> "readline" [];
	"inspect" -> "sys" [];
	"inspect" -> "os" [];
	"inspect" -> "types" [];
	"inspect" -> "string" [];
	"inspect" -> "re" [];
	"inspect" -> "dis" [];
	"inspect" -> "imp" [];
	"inspect" -> "tokenize" [];
	"inspect" -> "linecache" [];
	"inspect" -> "operator" [];
	"inspect" -> "operator.attrgetter" [];
	"inspect" -> "collections" [];
	"inspect" -> "collections.namedtuple" [];
	"tokenize" -> "itertools" [];
	"tokenize" -> "itertools.chain" [];
	"tokenize" -> "string" [];
	"tokenize" -> "re" [];
	"tokenize" -> "token" [];
	"tokenize" -> "sys" [];
	"token" -> "re" [];
	"token" -> "sys" [];
	"dis" -> "sys" [];
	"dis" -> "types" [];
	"dis" -> "opcode" [];
	"ordereddict" -> "ordereddict.OrderedDict" [];
	"collections.abc" -> "collections" [];
	"collections.abc" -> "collections.abc.Iterable" [];
	"collections.abc" -> "collections.abc.MutableMapping" [];
	"threading" -> "sys" [];
	"threading" -> "thread" [];
	"threading" -> "warnings" [];
	"threading" -> "collections" [];
	"threading" -> "collections.deque" [];
	"threading" -> "itertools" [];
	"threading" -> "itertools.count" [];
	"threading" -> "time" [];
	"threading" -> "time.sleep" [];
	"threading" -> "time.time" [];
	"threading" -> "traceback" [];
	"threading" -> "thread.stack_size" [];
	"threading" -> "thread._local" [];
	"threading" -> "threading.current_thread" [];
	"threading" -> "threading.RLock" [];
	"threading" -> "_threading_local" [];
	"threading" -> "random" [];
	"_threading_local" -> "threading" [];
	"_threading_local" -> "threading.current_thread" [];
	"_threading_local" -> "threading.RLock" [];
	"_thread" -> "_thread.RLock" [];
	"itertools" -> "itertools.islice" [];
	"itertools" -> "itertools.count" [];
	"itertools" -> "itertools.chain" [];
	"itertools" -> "itertools.izip" [];
	"itertools" -> "itertools.tee" [];
	"itertools" -> "itertools.imap" [];
	"itertools" -> "itertools.repeat" [];
	"itertools" -> "itertools.starmap" [];
	"itertools" -> "itertools.filterfalse" [];
	"itertools" -> "itertools.ifilterfalse" [];
	"datetime" -> "datetime.datetime" [];
	"types" -> "sys" [];
	"types" -> "types.SimpleNamespace" [];
	"traceback" -> "linecache" [];
	"traceback" -> "sys" [];
	"traceback" -> "types" [];
	"pprint" -> "sys" [];
	"pprint" -> "warnings" [];
	"pprint" -> "cStringIO" [];
	"pprint" -> "cStringIO.StringIO" [];
	"pprint" -> "StringIO" [];
	"pprint" -> "time" [];
	"collections" -> "_abcoll" [];
	"collections" -> "_collections" [];
	"collections" -> "_collections.defaultdict" [];
	"collections" -> "_collections.deque" [];
	"collections" -> "operator" [];
	"collections" -> "operator.eq" [];
	"collections" -> "operator.itemgetter" [];
	"collections" -> "keyword" [];
	"collections" -> "sys" [];
	"collections" -> "collections.namedtuple" [];
	"collections" -> "collections.OrderedDict" [];
	"collections" -> "collections.deque" [];
	"collections" -> "heapq" [];
	"collections" -> "itertools" [];
	"collections" -> "itertools.repeat" [];
	"collections" -> "itertools.starmap" [];
	"collections" -> "itertools.chain" [];
	"collections" -> "itertools.imap" [];
	"collections" -> "thread" [];
	"collections" -> "thread.get_ident" [];
	"collections" -> "dummy_thread" [];
	"collections" -> "cPickle" [];
	"collections" -> "cPickle.dumps" [];
	"collections" -> "cPickle.loads" [];
	"collections" -> "doctest" [];
	"cPickle" -> "cPickle.dumps" [];
	"cPickle" -> "cPickle.loads" [];
	"keyword" -> "sys" [];
	"keyword" -> "re" [];
	"_collections" -> "_collections.defaultdict" [];
	"_collections" -> "_collections.deque" [];
	"sre_constants" -> "_sre" [];
	"sre_constants" -> "_sre.MAXREPEAT" [];
	"_sre" -> "_sre.MAXREPEAT" [];
	"re" -> "sys" [];
	"re" -> "sre_compile" [];
	"re" -> "sre_parse" [];
	"re" -> "_locale" [];
	"re" -> "copy_reg" [];
	"re" -> "sre_constants" [];
	"sre_parse" -> "sys" [];
	"sre_parse" -> "sre_constants" [];
	"sre_parse" -> "warnings" [];
	"sre_compile" -> "_sre" [];
	"sre_compile" -> "sys" [];
	"sre_compile" -> "sre_parse" [];
	"sre_compile" -> "sre_constants" [];
	"sre_compile" -> "array" [];
	"warnings" -> "warnings.warn" [];
	"warnings" -> "linecache" [];
	"warnings" -> "sys" [];
	"warnings" -> "types" [];
	"warnings" -> "re" [];
	"warnings" -> "_warnings" [];
	"warnings" -> "_warnings.warn" [];
	"warnings" -> "_warnings.default_action" [];
	"warnings" -> "_warnings.once_registry" [];
	"warnings" -> "_warnings.filters" [];
	"warnings" -> "_warnings.warn_explicit" [];
	"_warnings" -> "_warnings.warn" [];
	"_warnings" -> "_warnings.default_action" [];
	"_warnings" -> "_warnings.once_registry" [];
	"_warnings" -> "_warnings.filters" [];
	"_warnings" -> "_warnings.warn_explicit" [];
	"copy" -> "types" [];
	"copy" -> "copy.deepcopy" [];
	"copy" -> "weakref" [];
	"copy" -> "copy_reg" [];
	"copy" -> "org" [];
	"copy" -> "org.python.core" [];
	"copy" -> "org.PyStringMap" [];
	"copy" -> "sys" [];
	"copy" -> "repr" [];
	"weakref" -> "UserDict" [];
	"weakref" -> "_weakref" [];
	"weakref" -> "_weakref.ProxyType" [];
	"weakref" -> "_weakref.CallableProxyType" [];
	"weakref" -> "_weakref._remove_dead_weakref" [];
	"weakref" -> "_weakref.getweakrefcount" [];
	"weakref" -> "_weakref.getweakrefs" [];
	"weakref" -> "_weakref.proxy" [];
	"weakref" -> "_weakref.ReferenceType" [];
	"weakref" -> "_weakref.ref" [];
	"weakref" -> "_weakrefset" [];
	"weakref" -> "exceptions" [];
	"weakref" -> "exceptions.ReferenceError" [];
	"weakref" -> "copy" [];
	"weakref" -> "copy.deepcopy" [];
	"exceptions" -> "exceptions.ReferenceError" [];
	"string" -> "re" [];
	"string" -> "strop" [];
	"string" -> "strop.uppercase" [];
	"string" -> "strop.lowercase" [];
	"string" -> "strop.maketrans" [];
	"string" -> "strop.whitespace" [];
	"strop" -> "strop.uppercase" [];
	"strop" -> "strop.lowercase" [];
	"strop" -> "strop.maketrans" [];
	"strop" -> "strop.whitespace" [];
}
